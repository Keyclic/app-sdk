/**
 * Keyclic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 *  <techies@keyclic.com>
 *
 * This class is auto generated by the swagger code generator program with proper templates of Keyclic.
 * https://github.com/swagger-api/swagger-codegen.git
 * https://github.com/Keyclic/app-sdk.git
 * Do not edit the class manually.
 */

import ApiClient from "../ApiClient";
import ApplicationAbout from "./ApplicationAbout";
import ApplicationAgreement from "./ApplicationAgreement";
import ApplicationLinks from "./ApplicationLinks";
import ContactPoint from "./ContactPoint";

/**
 * The Application model module.
 * @module model/Application
 */
export default class Application {
  /**
     * Constructs a new "Application".
     * @alias module:model/Application
     * @class
    
     * @param name { String }
    
     * @param token { String }
    
     */
  constructor(
    name,

    token
  ) {
    this.links = null;
    this.about = null;
    this.agreement = null;
    this.contactPoints = [];
    this.createdAt = null;
    this.id = null;
    this.name = name;
    this.token = token;
    this.type = null;
    this.updatedAt = null;
    this.version = null;

    this.linksType = ApplicationLinks;
    this.aboutType = ApplicationAbout;
    this.agreementType = ApplicationAgreement;
    this.contactPointsType = ContactPoint;
  }

  /**
   * Constructs a "Application" from a plain JavaScript object.
   * @param { object } data The plain JavaScript object bearing properties of interest.
   * @param { module:model/Application } object Optional instance to populate.
   * @return { module:model/Application } The populated "Application" instance.
   */
  static constructFromData(data, object = null) {
    if (data === null) {
      throw new Error("No data to build object");
    }

    if (object === null) {
      object = new Application();
    }

    if (data.hasOwnProperty("_links")) {
      object.links = ApiClient.convertToType(data["_links"], object.linksType);
    }
    if (data.hasOwnProperty("about")) {
      object.about = ApiClient.convertToType(data["about"], object.aboutType);
    }
    if (data.hasOwnProperty("agreement")) {
      object.agreement = ApiClient.convertToType(
        data["agreement"],
        object.agreementType
      );
    }
    if (data.hasOwnProperty("contactPoints")) {
      object.contactPoints = ApiClient.convertToType(data["contactPoints"], [
        object.contactPointsType
      ]);
    }
    if (data.hasOwnProperty("createdAt")) {
      object.createdAt = ApiClient.convertToType(data["createdAt"], "Date");
    }
    if (data.hasOwnProperty("id")) {
      object.id = ApiClient.convertToType(data["id"], "String");
    }
    if (data.hasOwnProperty("name")) {
      object.name = ApiClient.convertToType(data["name"], "String");
    }
    if (data.hasOwnProperty("token")) {
      object.token = ApiClient.convertToType(data["token"], "String");
    }
    if (data.hasOwnProperty("type")) {
      object.type = ApiClient.convertToType(data["type"], "String");
    }
    if (data.hasOwnProperty("updatedAt")) {
      object.updatedAt = ApiClient.convertToType(data["updatedAt"], "Date");
    }
    if (data.hasOwnProperty("version")) {
      object.version = ApiClient.convertToType(data["version"], "String");
    }

    return object;
  }

  /**
   * @return { module:model/ApplicationLinks }
   */
  getLinks() {
    return this.links;
  }

  /**
   * @param { module:model/ApplicationLinks } links
   */
  setLinks(links) {
    this.links = links;
  }
  /**
   * @return { module:model/ApplicationAbout }
   */
  getAbout() {
    return this.about;
  }

  /**
   * @param { module:model/ApplicationAbout } about
   */
  setAbout(about) {
    this.about = about;
  }
  /**
   * @return { module:model/ApplicationAgreement }
   */
  getAgreement() {
    return this.agreement;
  }

  /**
   * @param { module:model/ApplicationAgreement } agreement
   */
  setAgreement(agreement) {
    this.agreement = agreement;
  }
  /**
   * @return { Array.<module:model/ContactPoint> }
   */
  getContactPoints() {
    return this.contactPoints;
  }

  /**
   * @param { Array.<module:model/ContactPoint> } contactPoints
   */
  setContactPoints(contactPoints) {
    this.contactPoints = contactPoints;
  }
  /**
   * @return { Date }
   */
  getCreatedAt() {
    return this.createdAt;
  }

  /**
   * @return { String }
   */
  getId() {
    return this.id;
  }

  /**
   * @return { String }
   */
  getName() {
    return this.name;
  }

  /**
   * @param { String } name
   */
  setName(name) {
    this.name = name;
  }
  /**
   * @return { String }
   */
  getToken() {
    return this.token;
  }

  /**
   * @param { String } token
   */
  setToken(token) {
    this.token = token;
  }
  /**
   * @return { String }
   */
  getType() {
    return this.type;
  }

  /**
   * @return { Date }
   */
  getUpdatedAt() {
    return this.updatedAt;
  }

  /**
   * @return { String }
   */
  getVersion() {
    return this.version;
  }

  /**
   * @param { String } version
   */
  setVersion(version) {
    this.version = version;
  }
}
