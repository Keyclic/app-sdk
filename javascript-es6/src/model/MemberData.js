/**
 * Keyclic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 *  <techies@keyclic.com>
 *
 * This class is auto generated by the swagger code generator program with proper templates of Keyclic.
 * https://github.com/swagger-api/swagger-codegen.git
 * https://github.com/Keyclic/app-sdk.git
 * Do not edit the class manually.
 */

import ApiClient from "../ApiClient";
import MemberDataContactPoint from "./MemberDataContactPoint";

/**
 * The MemberData model module.
 * @module model/MemberData
 */
export default class MemberData {
  /**
     * Constructs a new "MemberData".
     * @alias module:model/MemberData
     * @class
    
     * @param organization { String }
    
     */
  constructor(organization) {
    this.contactPoint = null;
    this.organization = organization;
    this.person = null;
    this.type = null;

    this.contactPointType = MemberDataContactPoint;
  }

  /**
   * Constructs a "MemberData" from a plain JavaScript object.
   * @param { object } data The plain JavaScript object bearing properties of interest.
   * @param { module:model/MemberData } object Optional instance to populate.
   * @return { module:model/MemberData } The populated "MemberData" instance.
   */
  static constructFromData(data, object = null) {
    if (data === null) {
      throw new Error("No data to build object");
    }

    if (object === null) {
      object = new MemberData();
    }

    if (data.hasOwnProperty("contactPoint")) {
      object.contactPoint = ApiClient.convertToType(
        data["contactPoint"],
        object.contactPointType
      );
    }
    if (data.hasOwnProperty("organization")) {
      object.organization = ApiClient.convertToType(
        data["organization"],
        "String"
      );
    }
    if (data.hasOwnProperty("person")) {
      object.person = ApiClient.convertToType(data["person"], "String");
    }
    if (data.hasOwnProperty("type")) {
      object.type = ApiClient.convertToType(data["type"], "String");
    }

    return object;
  }

  /**
   * @return { module:model/MemberDataContactPoint }
   */
  getContactPoint() {
    return this.contactPoint;
  }

  /**
   * @param { module:model/MemberDataContactPoint } contactPoint
   */
  setContactPoint(contactPoint) {
    this.contactPoint = contactPoint;
  }
  /**
   * @return { String }
   */
  getOrganization() {
    return this.organization;
  }

  /**
   * @param { String } organization
   */
  setOrganization(organization) {
    this.organization = organization;
  }
  /**
   * @return { String }
   */
  getPerson() {
    return this.person;
  }

  /**
   * @param { String } person
   */
  setPerson(person) {
    this.person = person;
  }
  /**
   * @return { module:model/MemberData.TypeEnum }
   */
  getType() {
    return this.type;
  }

  /**
   * @param { module:model/MemberData.TypeEnum } type
   */
  setType(type) {
    this.type = type;
  }

  /**
   * Allowed values for the "type" property.
   * @enum { String }
   */
  static TypeEnum = {
    /**
     * value: "collaborator"
     * @const
     * @readonly
     */
    collaborator: "collaborator",
    /**
     * value: "contact"
     * @const
     * @readonly
     */
    contact: "contact"
  };
}
