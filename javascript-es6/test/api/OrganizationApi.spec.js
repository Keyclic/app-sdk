/**
 * Keyclic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 *  <techies@keyclic.com>
 *
 * This class is auto generated by the swagger code generator program with proper templates of Keyclic.
 * https://github.com/swagger-api/swagger-codegen.git
 * https://github.com/Keyclic/app-sdk.git
 * Do not edit the class manually.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.@KeyclicSdkJavascript);
  }
}(this, function(expect, @KeyclicSdkJavascript) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new @KeyclicSdkJavascript.OrganizationApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrganizationApi', function() {
    describe('cgetCategoriesByOrganization', function() {
      it('should call cgetCategoriesByOrganization successfully', function(done) {
        //uncomment below and update the code to test cgetCategoriesByOrganization
        //instance.cgetCategoriesByOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cgetDelegationsByOrganization', function() {
      it('should call cgetDelegationsByOrganization successfully', function(done) {
        //uncomment below and update the code to test cgetDelegationsByOrganization
        //instance.cgetDelegationsByOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cgetExternalServicesByOrganization', function() {
      it('should call cgetExternalServicesByOrganization successfully', function(done) {
        //uncomment below and update the code to test cgetExternalServicesByOrganization
        //instance.cgetExternalServicesByOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cgetInternalServicesByOrganization', function() {
      it('should call cgetInternalServicesByOrganization successfully', function(done) {
        //uncomment below and update the code to test cgetInternalServicesByOrganization
        //instance.cgetInternalServicesByOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cgetMembersByOrganization', function() {
      it('should call cgetMembersByOrganization successfully', function(done) {
        //uncomment below and update the code to test cgetMembersByOrganization
        //instance.cgetMembersByOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cgetOperationsByOrganization', function() {
      it('should call cgetOperationsByOrganization successfully', function(done) {
        //uncomment below and update the code to test cgetOperationsByOrganization
        //instance.cgetOperationsByOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cgetOrganizations', function() {
      it('should call cgetOrganizations successfully', function(done) {
        //uncomment below and update the code to test cgetOrganizations
        //instance.cgetOrganizations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cgetPlacesByOrganization', function() {
      it('should call cgetPlacesByOrganization successfully', function(done) {
        //uncomment below and update the code to test cgetPlacesByOrganization
        //instance.cgetPlacesByOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cgetPublicationsByOrganization', function() {
      it('should call cgetPublicationsByOrganization successfully', function(done) {
        //uncomment below and update the code to test cgetPublicationsByOrganization
        //instance.cgetPublicationsByOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cgetReportsByOrganization', function() {
      it('should call cgetReportsByOrganization successfully', function(done) {
        //uncomment below and update the code to test cgetReportsByOrganization
        //instance.cgetReportsByOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cgetWebhooksByOrganization', function() {
      it('should call cgetWebhooksByOrganization successfully', function(done) {
        //uncomment below and update the code to test cgetWebhooksByOrganization
        //instance.cgetWebhooksByOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cpostExportByOrganization', function() {
      it('should call cpostExportByOrganization successfully', function(done) {
        //uncomment below and update the code to test cpostExportByOrganization
        //instance.cpostExportByOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAnalyticByOrganization', function() {
      it('should call getAnalyticByOrganization successfully', function(done) {
        //uncomment below and update the code to test getAnalyticByOrganization
        //instance.getAnalyticByOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConfigurationByOrganization', function() {
      it('should call getConfigurationByOrganization successfully', function(done) {
        //uncomment below and update the code to test getConfigurationByOrganization
        //instance.getConfigurationByOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFormByOrganization', function() {
      it('should call getFormByOrganization successfully', function(done) {
        //uncomment below and update the code to test getFormByOrganization
        //instance.getFormByOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganization', function() {
      it('should call getOrganization successfully', function(done) {
        //uncomment below and update the code to test getOrganization
        //instance.getOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchOrganization', function() {
      it('should call patchOrganization successfully', function(done) {
        //uncomment below and update the code to test patchOrganization
        //instance.patchOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
