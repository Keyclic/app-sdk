/**
 * Keyclic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 *  <techies@keyclic.com>
 *
 * This class is auto generated by the swagger code generator program with proper templates of Keyclic.
 * https://github.com/swagger-api/swagger-codegen.git
 * https://github.com/Keyclic/app-sdk.git
 * Do not edit the class manually.
 */

import ApiClient from "../ApiClient";

/**
 * The OperationWorkflowTransitionData model module.
 * @module model/OperationWorkflowTransitionData
 */
export default class OperationWorkflowTransitionData {
  /**
     * Constructs a new "OperationWorkflowTransitionData".
     * @alias module:model/OperationWorkflowTransitionData
     * @class
    
     * @param transition { module:model/OperationWorkflowTransitionData.TransitionEnum }
    
     */
  constructor(transition) {
    this.transition = transition;
  }

  /**
   * Constructs a "OperationWorkflowTransitionData" from a plain JavaScript object.
   * @param { object } data The plain JavaScript object bearing properties of interest.
   * @param { module:model/OperationWorkflowTransitionData } object Optional instance to populate.
   * @return { module:model/OperationWorkflowTransitionData } The populated "OperationWorkflowTransitionData" instance.
   */
  static constructFromData(data, object = null) {
    if (data === null) {
      throw new Error("No data to build object");
    }

    if (object === null) {
      object = new OperationWorkflowTransitionData();
    }

    if (data.hasOwnProperty("transition")) {
      object.transition = ApiClient.convertToType(data["transition"], "String");
    }

    return object;
  }

  /**
   * Allowed values for the "transition" property.
   * @enum { String }
   */
  static TransitionEnum = {
    /**
     * value: "accept"
     * @const
     * @readonly
     */
    accept: "accept",
    /**
     * value: "assign"
     * @const
     * @readonly
     */
    assign: "assign",
    /**
     * value: "progress"
     * @const
     * @readonly
     */
    progress: "progress",
    /**
     * value: "refuse"
     * @const
     * @readonly
     */
    refuse: "refuse",
    /**
     * value: "reset"
     * @const
     * @readonly
     */
    reset: "reset",
    /**
     * value: "resolve"
     * @const
     * @readonly
     */
    resolve: "resolve"
  };
}
