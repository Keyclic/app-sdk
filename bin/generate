#!/usr/bin/env bash

#set -x  # print terminal command

# This script generates Swagger codegen client
# then it generates app-sdk from templates and swagger.json file
# then it fixes src and test files.
CURRENT_DIR=$(pwd)

function cleanup {
    cd ${CURRENT_DIR} || exit
    echo "Don't forget to publish on Github and NPM."
}
SWAGGER_FILE="$1"
if [ -z "$SWAGGER_FILE" ]; then
    SWAGGER_FILE="https://api.keyclic.com/swagger.json"
fi
echo "Use file ${SWAGGER_FILE} as definition API."
echo

# rm -rf ${CURRENT_DIR}/javascript-es6
# docker run --rm --volume ${PWD}:/local --user "$(id -u)":"$(id -g)" \
#     swaggerapi/swagger-codegen-cli \
#     generate \
#     --config /local/options.javascript-es6.json \
#     --input-spec ${SWAGGER_FILE} \
#     --lang javascript \
#     --output /local/javascript-es6 \
#     --template-dir /local/javascript-es6-templates

rm -rf ${CURRENT_DIR}/dart
docker run --rm --volume ${PWD}:/local --user "$(id -u)":"$(id -g)" \
    swaggerapi/swagger-codegen-cli:unstable \
    generate \
    --config /local/options.dart.json \
    --input-spec ${SWAGGER_FILE} \
    --lang dart \
    --output /local/dart

#old options example
#java \
#   -jar /home/marin/IdeaProjects/swagger-codegen/modules/swagger-codegen-cli/target/swagger-codegen-cli.jar \
#   generate \
#   --config options.dart.json \
#   --input-spec ${SWAGGER_FILE} \
#   --lang dart \
#   --output dart \
#   --template-dir dart-templates
#   > .codegen.dart.log

# Build javascript-es6 package.
#cd ${CURRENT_DIR}/javascript-es6 || exit
#npm install
#npm run standard
#npm run build

# Change some variable name in dart package.
cd ${CURRENT_DIR}/dart || exit
sed -i 's/geoHash\[\]/geoHash_/g' lib/api/*
sed -i 's/options\[property\]/options_property_/g' lib/api/*
sed -i 's/options\[sort\]/options_sort_/g' lib/api/*
sed -i 's/parents\[\]/parents_/g' lib/api/*
sed -i 's/search\[alternateName\]/search_alternateName_/g' lib/api/*
sed -i 's/search\[billingEmailAddress\]/search_billingEmailAddress_/g' lib/api/*
sed -i 's/search\[branchCode\]/search_branchCode_/g' lib/api/*
sed -i 's/search\[color\]/search_color_/g' lib/api/*
sed -i 's/search\[description\]/search_description_/g' lib/api/*
sed -i 's/search\[email\]/search_email_/g' lib/api/*
sed -i 's/search\[familyName\]/search_familyName_/g' lib/api/*
sed -i 's/search\[givenName\]/search_givenName_/g' lib/api/*
sed -i 's/search\[icon\]/search_icon_/g' lib/api/*
sed -i 's/search\[identificationNumber\]/search_identificationNumber_/g' lib/api/*
sed -i 's/search\[jobTitle\]/search_jobTitle_/g' lib/api/*
sed -i 's/search\[name\]/search_name_/g' lib/api/*
sed -i 's/search\[notificationEmailAddress\]/search_notificationEmailAddress_/g' lib/api/*
sed -i 's/search\[username\]/search_username_/g' lib/api/*
sed -i 's/visibility\[\]/visibility_/g' lib/api/*
sed -i "s/json\['embedded/json\['_embedded/g" lib/model/*
sed -i "s/json\['enum_/json\['enum/g" lib/model/*
sed -i "s/json\['links/json\['_links/g" lib/model/*

sed -i 's/"geoHash_"/"geoHash\[\]"/g' lib/api/*
sed -i 's/"options_property_"/"options\[property\]"/g' lib/api/*
sed -i 's/"options_sort_"/"options\[sort\]"/g' lib/api/*
sed -i 's/"parents_"/"parents\[\]"/g' lib/api/*
sed -i 's/"search_alternateName_"/"search[alternateName]"/g' lib/api/*
sed -i 's/"search_billingEmailAddress_"/"search[billingEmailAddress]"/g' lib/api/*
sed -i 's/"search_branchCode_"/"search[branchCode]"/g' lib/api/*
sed -i 's/"search_color_"/"search[color]"/g' lib/api/*
sed -i 's/"search_description_"/"search[description]"/g' lib/api/*
sed -i 's/"search_email_"/"search[email]"/g' lib/api/*
sed -i 's/"search_familyName_"/"search[familyName]"/g' lib/api/*
sed -i 's/"search_givenName_"/"search[givenName]"/g' lib/api/*
sed -i 's/"search_icon_"/"search[icon]"/g' lib/api/*
sed -i 's/"search_identificationNumber_"/"search[identificationNumber]"/g' lib/api/*
sed -i 's/"search_jobTitle_"/"search[jobTitle]"/g' lib/api/*
sed -i 's/"search_name_"/"search[name]"/g' lib/api/*
sed -i 's/"search_notificationEmailAddress_"/"search[notificationEmailAddress]"/g' lib/api/*
sed -i 's/"search_username_"/"search[username]"/g' lib/api/*
sed -i 's/"visibility_"/"visibility\[\]"/g' lib/api/*
grep -q "author:" pubspec.yaml || echo "author: Keyclic techies team <techies@keyclic.com>" >> pubspec.yaml
grep -q "environment:" pubspec.yaml || echo "environment:" >> pubspec.yaml
grep -q "sdk:" pubspec.yaml || echo "  sdk: \"<3.0.0\"" >> pubspec.yaml
grep -q "homepage:" pubspec.yaml || echo "homepage: https://keyclic.com" >> pubspec.yaml

flutter pub get
dartfmt -w lib/*

# When the script exits call cleanup function.
trap cleanup EXIT
