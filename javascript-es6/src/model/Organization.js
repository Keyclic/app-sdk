/**
 * Keyclic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 *  <techies@keyclic.com>
 *
 * This class is auto generated by the swagger code generator program with proper templates of Keyclic.
 * https://github.com/swagger-api/swagger-codegen.git
 * https://github.com/Keyclic/app-sdk.git
 * Do not edit the class manually.
 */

import ApiClient from "../ApiClient";
import OrganizationLinks from "./OrganizationLinks";
import Preferences from "./Preferences";

/**
 * The Organization model module.
 * @module model/Organization
 */
export default class Organization {
  /**
     * Constructs a new "Organization".
     * @alias module:model/Organization
     * @class
    
     * @param name { String }
    
     */
  constructor(name) {
    this.links = null;
    this.alternateName = null;
    this.billingEmailAddress = null;
    this.createdAt = null;
    this.description = null;
    this.enabled = null;
    this.id = null;
    this.name = name;
    this.notificationEmailAddress = null;
    this.preferences = null;
    this.type = null;
    this.updatedAt = null;

    this.linksType = OrganizationLinks;
    this.preferencesType = Preferences;
  }

  /**
   * Constructs a "Organization" from a plain JavaScript object.
   * @param { object } data The plain JavaScript object bearing properties of interest.
   * @param { module:model/Organization } object Optional instance to populate.
   * @return { module:model/Organization } The populated "Organization" instance.
   */
  static constructFromData(data, object = null) {
    if (data === null) {
      throw new Error("No data to build object");
    }

    if (object === null) {
      object = new Organization();
    }

    if (data.hasOwnProperty("_links")) {
      object.links = ApiClient.convertToType(data["_links"], object.linksType);
    }
    if (data.hasOwnProperty("alternateName")) {
      object.alternateName = ApiClient.convertToType(
        data["alternateName"],
        "String"
      );
    }
    if (data.hasOwnProperty("billingEmailAddress")) {
      object.billingEmailAddress = ApiClient.convertToType(
        data["billingEmailAddress"],
        "String"
      );
    }
    if (data.hasOwnProperty("createdAt")) {
      object.createdAt = ApiClient.convertToType(data["createdAt"], "Date");
    }
    if (data.hasOwnProperty("description")) {
      object.description = ApiClient.convertToType(
        data["description"],
        "String"
      );
    }
    if (data.hasOwnProperty("enabled")) {
      object.enabled = ApiClient.convertToType(data["enabled"], "Boolean");
    }
    if (data.hasOwnProperty("id")) {
      object.id = ApiClient.convertToType(data["id"], "String");
    }
    if (data.hasOwnProperty("name")) {
      object.name = ApiClient.convertToType(data["name"], "String");
    }
    if (data.hasOwnProperty("notificationEmailAddress")) {
      object.notificationEmailAddress = ApiClient.convertToType(
        data["notificationEmailAddress"],
        "String"
      );
    }
    if (data.hasOwnProperty("preferences")) {
      object.preferences = ApiClient.convertToType(
        data["preferences"],
        object.preferencesType
      );
    }
    if (data.hasOwnProperty("type")) {
      object.type = ApiClient.convertToType(data["type"], "String");
    }
    if (data.hasOwnProperty("updatedAt")) {
      object.updatedAt = ApiClient.convertToType(data["updatedAt"], "Date");
    }

    return object;
  }

  /**
   * @return { module:model/OrganizationLinks }
   */
  getLinks() {
    return this.links;
  }

  /**
   * @param { module:model/OrganizationLinks } links
   */
  setLinks(links) {
    this.links = links;
  }
  /**
   * @return { String }
   */
  getAlternateName() {
    return this.alternateName;
  }

  /**
   * @param { String } alternateName
   */
  setAlternateName(alternateName) {
    this.alternateName = alternateName;
  }
  /**
   * @return { String }
   */
  getBillingEmailAddress() {
    return this.billingEmailAddress;
  }

  /**
   * @param { String } billingEmailAddress
   */
  setBillingEmailAddress(billingEmailAddress) {
    this.billingEmailAddress = billingEmailAddress;
  }
  /**
   * @return { Date }
   */
  getCreatedAt() {
    return this.createdAt;
  }

  /**
   * @return { String }
   */
  getDescription() {
    return this.description;
  }

  /**
   * @param { String } description
   */
  setDescription(description) {
    this.description = description;
  }
  /**
   * @return { Boolean }
   */
  getEnabled() {
    return this.enabled;
  }

  /**
   * @param { Boolean } enabled
   */
  setEnabled(enabled) {
    this.enabled = enabled;
  }
  /**
   * @return { String }
   */
  getId() {
    return this.id;
  }

  /**
   * @return { String }
   */
  getName() {
    return this.name;
  }

  /**
   * @param { String } name
   */
  setName(name) {
    this.name = name;
  }
  /**
   * @return { String }
   */
  getNotificationEmailAddress() {
    return this.notificationEmailAddress;
  }

  /**
   * @param { String } notificationEmailAddress
   */
  setNotificationEmailAddress(notificationEmailAddress) {
    this.notificationEmailAddress = notificationEmailAddress;
  }
  /**
   * @return { module:model/Preferences }
   */
  getPreferences() {
    return this.preferences;
  }

  /**
   * @param { module:model/Preferences } preferences
   */
  setPreferences(preferences) {
    this.preferences = preferences;
  }
  /**
   * @return { String }
   */
  getType() {
    return this.type;
  }

  /**
   * @return { Date }
   */
  getUpdatedAt() {
    return this.updatedAt;
  }
}
