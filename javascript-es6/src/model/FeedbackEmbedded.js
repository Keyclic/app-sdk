/**
 * Keyclic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 *  <techies@keyclic.com>
 *
 * This class is auto generated by the swagger code generator program with proper templates of Keyclic.
 * https://github.com/swagger-api/swagger-codegen.git
 * https://github.com/Keyclic/app-sdk.git
 * Do not edit the class manually.
 */

import ApiClient from "../ApiClient";
import Person from "./Person";

/**
 * The FeedbackEmbedded model module.
 * @module model/FeedbackEmbedded
 */
export default class FeedbackEmbedded {
  /**
     * Constructs a new "FeedbackEmbedded".
     * @alias module:model/FeedbackEmbedded
     * @class
    
     */
  constructor() {
    this.reporter = null;
    this.stateTransitions = [];
    this.tracking = null;

    this.reporterType = Person;
  }

  /**
   * Constructs a "FeedbackEmbedded" from a plain JavaScript object.
   * @param { object } data The plain JavaScript object bearing properties of interest.
   * @param { module:model/FeedbackEmbedded } object Optional instance to populate.
   * @return { module:model/FeedbackEmbedded } The populated "FeedbackEmbedded" instance.
   */
  static constructFromData(data, object = null) {
    if (data === null) {
      throw new Error("No data to build object");
    }

    if (object === null) {
      object = new FeedbackEmbedded();
    }

    if (data.hasOwnProperty("reporter")) {
      object.reporter = ApiClient.convertToType(
        data["reporter"],
        object.reporterType
      );
    }
    if (data.hasOwnProperty("stateTransitions")) {
      object.stateTransitions = ApiClient.convertToType(
        data["stateTransitions"],
        "['String']"
      );
    }
    if (data.hasOwnProperty("tracking")) {
      object.tracking = ApiClient.convertToType(data["tracking"], "String");
    }

    return object;
  }

  /**
   * @return { module:model/Person }
   */
  getReporter() {
    return this.reporter;
  }

  /**
   * @param { module:model/Person } reporter
   */
  setReporter(reporter) {
    this.reporter = reporter;
  }
  /**
   * @return { Array.<String> }
   */
  getStateTransitions() {
    return this.stateTransitions;
  }

  /**
   * @param { Array.<String> } stateTransitions
   */
  setStateTransitions(stateTransitions) {
    this.stateTransitions = stateTransitions;
  }
  /**
   * @return { String }
   */
  getTracking() {
    return this.tracking;
  }

  /**
   * @param { String } tracking
   */
  setTracking(tracking) {
    this.tracking = tracking;
  }
}
