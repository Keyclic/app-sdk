/**
 * Keyclic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.23.2
 * Contact: techies@keyclic.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { Place } from '../model/place';
import { PlaceData } from '../model/placeData';
import { PlacePagination } from '../model/placePagination';
import { PlacePatch } from '../model/placePatch';


import { Configuration }                                     from '../configuration';


export interface PlaceServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    

    /**
    * Retrieve all Place resources.
    * 
    * @param xKeyclicApp 
    * @param acceptLanguage 
    * @param xKeyclicAppVersion 
    * @param businessActivity The identifier of the resource formatted as GUID string.
    * @param geoCoordinates One latitude and one longitude serialized and separated by a plus or a minus sign.
    * @param geoElevation 
    * @param geoHash 
    * @param geoPoint One latitude and one longitude serialized and separated by a plus or a minus sign.
    * @param organization The identifier of the resource formatted as GUID string.
    * @param parent The identifier of the resource formatted as GUID string.
    * @param parents The identifier of the resource formatted as GUID string.
    * @param page Page of the overview.
    * @param limit Page of the overview.
    * @param order 
    * @param after 
    * @param before 
    * @param searchBranchCode 
    * @param searchName 
    */
    cgetPlaces(xKeyclicApp: string, acceptLanguage?: 'fr-FR' | 'en-US', xKeyclicAppVersion?: string, businessActivity?: string, geoCoordinates?: string, geoElevation?: string, geoHash?: string, geoPoint?: string, organization?: string, parent?: string, parents?: string, page?: number, limit?: number, order?: 'asc' | 'desc', after?: Date, before?: Date, searchBranchCode?: string, searchName?: string, extraHttpRequestParams?: any): Observable<PlacePagination>;

    /**
    * Retrieve all Place resources.
    * 
    * @param xKeyclicApp 
    * @param organization The identifier of the resource formatted as GUID string.
    * @param acceptLanguage 
    * @param xKeyclicAppVersion 
    * @param businessActivity The identifier of the resource formatted as GUID string.
    * @param geoCoordinates One latitude and one longitude serialized and separated by a plus or a minus sign.
    * @param geoElevation 
    * @param geoHash 
    * @param geoPoint One latitude and one longitude serialized and separated by a plus or a minus sign.
    * @param parent The identifier of the resource formatted as GUID string.
    * @param parents The identifier of the resource formatted as GUID string.
    * @param page Page of the overview.
    * @param limit Page of the overview.
    * @param order 
    * @param after 
    * @param before 
    * @param searchBranchCode 
    * @param searchName 
    */
    cgetPlacesByOrganization(xKeyclicApp: string, organization: string, acceptLanguage?: 'fr-FR' | 'en-US', xKeyclicAppVersion?: string, businessActivity?: string, geoCoordinates?: string, geoElevation?: string, geoHash?: string, geoPoint?: string, parent?: string, parents?: string, page?: number, limit?: number, order?: 'asc' | 'desc', after?: Date, before?: Date, searchBranchCode?: string, searchName?: string, extraHttpRequestParams?: any): Observable<PlacePagination>;

    /**
    * Retrieve one Place resource.
    * 
    * @param xKeyclicApp 
    * @param place The identifier of the resource formatted as GUID string.
    * @param acceptLanguage 
    * @param xKeyclicAppVersion 
    */
    getPlace(xKeyclicApp: string, place: string, acceptLanguage?: 'fr-FR' | 'en-US', xKeyclicAppVersion?: string, extraHttpRequestParams?: any): Observable<Place>;

    /**
    * Edit one Place resource.
    * 
    * @param xKeyclicApp 
    * @param place The identifier of the resource formatted as GUID string.
    * @param acceptLanguage 
    * @param xKeyclicAppVersion 
    * @param placePatch 
    */
    patchPlace(xKeyclicApp: string, place: string, acceptLanguage?: 'fr-FR' | 'en-US', xKeyclicAppVersion?: string, placePatch?: PlacePatch, extraHttpRequestParams?: any): Observable<Place>;

    /**
    * Create one Place resource.
    * 
    * @param xKeyclicApp 
    * @param organization The identifier of the resource formatted as GUID string.
    * @param acceptLanguage 
    * @param xKeyclicAppVersion 
    * @param placeData 
    */
    postPlaceByOrganization(xKeyclicApp: string, organization: string, acceptLanguage?: 'fr-FR' | 'en-US', xKeyclicAppVersion?: string, placeData?: PlaceData, extraHttpRequestParams?: any): Observable<Place>;

}
