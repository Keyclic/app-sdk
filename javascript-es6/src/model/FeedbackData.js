/**
 * Keyclic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 *  <techies@keyclic.com>
 *
 * This class is auto generated by the swagger code generator program with proper templates of Keyclic.
 * https://github.com/swagger-api/swagger-codegen.git
 * https://github.com/Keyclic/app-sdk.git
 * Do not edit the class manually.
 */

import ApiClient from "../ApiClient";
import FeedbackDataGeo from "./FeedbackDataGeo";

/**
 * The FeedbackData model module.
 * @module model/FeedbackData
 */
export default class FeedbackData {
  /**
     * Constructs a new "FeedbackData".
     * @alias module:model/FeedbackData
     * @class
    
     * @param geo { module:model/FeedbackDataGeo }
    
     * @param place { String }
    
     * @param visibility { module:model/FeedbackData.VisibilityEnum }
    
     */
  constructor(
    geo,

    place,

    visibility
  ) {
    this.businessActivity = null;
    this.category = null;
    this.description = null;
    this.geo = geo;
    this.metadata = [];
    this.place = place;
    this.proMode = null;
    this.visibility = visibility;

    this.geoType = FeedbackDataGeo;
  }

  /**
   * Constructs a "FeedbackData" from a plain JavaScript object.
   * @param { object } data The plain JavaScript object bearing properties of interest.
   * @param { module:model/FeedbackData } object Optional instance to populate.
   * @return { module:model/FeedbackData } The populated "FeedbackData" instance.
   */
  static constructFromData(data, object = null) {
    if (data === null) {
      throw new Error("No data to build object");
    }

    if (object === null) {
      object = new FeedbackData();
    }

    if (data.hasOwnProperty("businessActivity")) {
      object.businessActivity = ApiClient.convertToType(
        data["businessActivity"],
        "String"
      );
    }
    if (data.hasOwnProperty("category")) {
      object.category = ApiClient.convertToType(data["category"], "String");
    }
    if (data.hasOwnProperty("description")) {
      object.description = ApiClient.convertToType(
        data["description"],
        "String"
      );
    }
    if (data.hasOwnProperty("geo")) {
      object.geo = ApiClient.convertToType(data["geo"], object.geoType);
    }
    if (data.hasOwnProperty("metadata")) {
      object.metadata = ApiClient.convertToType(data["metadata"], "['String']");
    }
    if (data.hasOwnProperty("place")) {
      object.place = ApiClient.convertToType(data["place"], "String");
    }
    if (data.hasOwnProperty("proMode")) {
      object.proMode = ApiClient.convertToType(data["proMode"], "Boolean");
    }
    if (data.hasOwnProperty("visibility")) {
      object.visibility = ApiClient.convertToType(data["visibility"], "String");
    }

    return object;
  }

  /**
   * @return { String }
   */
  getBusinessActivity() {
    return this.businessActivity;
  }

  /**
   * @param { String } businessActivity
   */
  setBusinessActivity(businessActivity) {
    this.businessActivity = businessActivity;
  }
  /**
   * @return { String }
   */
  getCategory() {
    return this.category;
  }

  /**
   * @param { String } category
   */
  setCategory(category) {
    this.category = category;
  }
  /**
   * @return { String }
   */
  getDescription() {
    return this.description;
  }

  /**
   * @param { String } description
   */
  setDescription(description) {
    this.description = description;
  }
  /**
   * @return { module:model/FeedbackDataGeo }
   */
  getGeo() {
    return this.geo;
  }

  /**
   * @param { module:model/FeedbackDataGeo } geo
   */
  setGeo(geo) {
    this.geo = geo;
  }
  /**
   * @return { Object.<String, String> }
   */
  getMetadata() {
    return this.metadata;
  }

  /**
   * @param { Object.<String, String> } metadata
   */
  setMetadata(metadata) {
    this.metadata = metadata;
  }
  /**
   * @return { String }
   */
  getPlace() {
    return this.place;
  }

  /**
   * @param { String } place
   */
  setPlace(place) {
    this.place = place;
  }
  /**
   * @return { Boolean }
   */
  getProMode() {
    return this.proMode;
  }

  /**
   * @param { Boolean } proMode
   */
  setProMode(proMode) {
    this.proMode = proMode;
  }
  /**
   * @return { module:model/FeedbackData.VisibilityEnum }
   */
  getVisibility() {
    return this.visibility;
  }

  /**
   * @param { module:model/FeedbackData.VisibilityEnum } visibility
   */
  setVisibility(visibility) {
    this.visibility = visibility;
  }

  /**
   * Allowed values for the "visibility" property.
   * @enum { String }
   */
  static VisibilityEnum = {
    /**
     * value: "VISIBILITY_PRIVATE"
     * @const
     * @readonly
     */
    PRIVATE: "VISIBILITY_PRIVATE",
    /**
     * value: "VISIBILITY_PUBLIC"
     * @const
     * @readonly
     */
    PUBLIC: "VISIBILITY_PUBLIC"
  };
}
