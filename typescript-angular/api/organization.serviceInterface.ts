/**
 * Keyclic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.23.2
 * Contact: techies@keyclic.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { Organization } from '../model/organization';
import { OrganizationData } from '../model/organizationData';
import { OrganizationPagination } from '../model/organizationPagination';
import { OrganizationPatch } from '../model/organizationPatch';


import { Configuration }                                     from '../configuration';


export interface OrganizationServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    

    /**
    * Retrieve all Organization resources.
    * 
    * @param xKeyclicApp 
    * @param acceptLanguage 
    * @param xKeyclicAppVersion 
    * @param businessActivity The identifier of the resource formatted as GUID string.
    * @param geoCoordinates One latitude and one longitude serialized and separated by a plus or a minus sign.
    * @param geoPoint One latitude and one longitude serialized and separated by a plus or a minus sign.
    * @param organization The identifier of the resource formatted as GUID string.
    * @param page Page of the overview.
    * @param limit Page of the overview.
    * @param order 
    * @param after 
    * @param before 
    * @param searchName 
    * @param searchAlternateName 
    * @param searchDescription 
    * @param searchBillingEmailAddress 
    * @param searchNotificationEmailAddress 
    */
    cgetOrganizations(xKeyclicApp: string, acceptLanguage?: 'fr-FR' | 'en-US', xKeyclicAppVersion?: string, businessActivity?: string, geoCoordinates?: string, geoPoint?: string, organization?: string, page?: number, limit?: number, order?: 'asc' | 'desc', after?: Date, before?: Date, searchName?: string, searchAlternateName?: string, searchDescription?: string, searchBillingEmailAddress?: string, searchNotificationEmailAddress?: string, extraHttpRequestParams?: any): Observable<OrganizationPagination>;

    /**
    * Retrieve one Organization resource.
    * 
    * @param xKeyclicApp 
    * @param organization The identifier of the resource formatted as GUID string.
    * @param acceptLanguage 
    * @param xKeyclicAppVersion 
    */
    getOrganization(xKeyclicApp: string, organization: string, acceptLanguage?: 'fr-FR' | 'en-US', xKeyclicAppVersion?: string, extraHttpRequestParams?: any): Observable<Organization>;

    /**
    * Edit one Organization resource.
    * 
    * @param xKeyclicApp 
    * @param organization The identifier of the resource formatted as GUID string.
    * @param acceptLanguage 
    * @param xKeyclicAppVersion 
    * @param organizationPatch 
    */
    patchOrganization(xKeyclicApp: string, organization: string, acceptLanguage?: 'fr-FR' | 'en-US', xKeyclicAppVersion?: string, organizationPatch?: OrganizationPatch, extraHttpRequestParams?: any): Observable<Organization>;

    /**
    * Create one Organization resource.
    * 
    * @param xKeyclicApp 
    * @param acceptLanguage 
    * @param xKeyclicAppVersion 
    * @param organizationData 
    */
    postOrganization(xKeyclicApp: string, acceptLanguage?: 'fr-FR' | 'en-US', xKeyclicAppVersion?: string, organizationData?: OrganizationData, extraHttpRequestParams?: any): Observable<Organization>;

}
