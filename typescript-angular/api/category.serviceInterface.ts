/**
 * Keyclic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.23.2
 * Contact: techies@keyclic.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { Category } from '../model/category';
import { CategoryData } from '../model/categoryData';
import { CategoryPagination } from '../model/categoryPagination';
import { CategoryPatch } from '../model/categoryPatch';


import { Configuration }                                     from '../configuration';


export interface CategoryServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    

    /**
    * Retrieve all Category resources.
    * 
    * @param xKeyclicApp 
    * @param acceptLanguage 
    * @param xKeyclicAppVersion 
    * @param businessActivity The identifier of the resource formatted as GUID string.
    * @param organization The identifier of the resource formatted as GUID string.
    * @param geoCoordinates One latitude and one longitude serialized and separated by a plus or a minus sign.
    * @param geoPoint One latitude and one longitude serialized and separated by a plus or a minus sign.
    * @param page Page of the overview.
    * @param limit Page of the overview.
    * @param order 
    * @param after 
    * @param before 
    * @param searchColor 
    * @param searchIcon 
    * @param searchName 
    * @param searchIdentificationNumber 
    */
    cgetCategories(xKeyclicApp: string, acceptLanguage?: 'fr-FR' | 'en-US', xKeyclicAppVersion?: string, businessActivity?: string, organization?: string, geoCoordinates?: string, geoPoint?: string, page?: number, limit?: number, order?: 'asc' | 'desc', after?: Date, before?: Date, searchColor?: string, searchIcon?: string, searchName?: string, searchIdentificationNumber?: string, extraHttpRequestParams?: any): Observable<CategoryPagination>;

    /**
    * Retrieve all Category resources.
    * 
    * @param xKeyclicApp 
    * @param organization The identifier of the resource formatted as GUID string.
    * @param acceptLanguage 
    * @param xKeyclicAppVersion 
    * @param businessActivity The identifier of the resource formatted as GUID string.
    * @param geoCoordinates One latitude and one longitude serialized and separated by a plus or a minus sign.
    * @param geoPoint One latitude and one longitude serialized and separated by a plus or a minus sign.
    * @param page Page of the overview.
    * @param limit Page of the overview.
    * @param order 
    * @param after 
    * @param before 
    * @param searchColor 
    * @param searchIcon 
    * @param searchName 
    * @param searchIdentificationNumber 
    */
    cgetCategoriesByOrganization(xKeyclicApp: string, organization: string, acceptLanguage?: 'fr-FR' | 'en-US', xKeyclicAppVersion?: string, businessActivity?: string, geoCoordinates?: string, geoPoint?: string, page?: number, limit?: number, order?: 'asc' | 'desc', after?: Date, before?: Date, searchColor?: string, searchIcon?: string, searchName?: string, searchIdentificationNumber?: string, extraHttpRequestParams?: any): Observable<CategoryPagination>;

    /**
    * Retrieve one Category resource.
    * 
    * @param xKeyclicApp 
    * @param category The identifier of the resource formatted as GUID string.
    * @param acceptLanguage 
    * @param xKeyclicAppVersion 
    */
    getCategory(xKeyclicApp: string, category: string, acceptLanguage?: 'fr-FR' | 'en-US', xKeyclicAppVersion?: string, extraHttpRequestParams?: any): Observable<Category>;

    /**
    * Edit one Category resource.
    * 
    * @param xKeyclicApp 
    * @param category The identifier of the resource formatted as GUID string.
    * @param acceptLanguage 
    * @param xKeyclicAppVersion 
    * @param categoryPatch 
    */
    patchCategory(xKeyclicApp: string, category: string, acceptLanguage?: 'fr-FR' | 'en-US', xKeyclicAppVersion?: string, categoryPatch?: CategoryPatch, extraHttpRequestParams?: any): Observable<Category>;

    /**
    * Create one Category resource.
    * 
    * @param xKeyclicApp 
    * @param organization The identifier of the resource formatted as GUID string.
    * @param acceptLanguage 
    * @param xKeyclicAppVersion 
    * @param categoryData 
    */
    postCategoryByOrganization(xKeyclicApp: string, organization: string, acceptLanguage?: 'fr-FR' | 'en-US', xKeyclicAppVersion?: string, categoryData?: CategoryData, extraHttpRequestParams?: any): Observable<Category>;

}
