/**
 * Keyclic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 *  <techies@keyclic.com>
 *
 * This class is auto generated by the swagger code generator program with proper templates of Keyclic.
 * https://github.com/swagger-api/swagger-codegen.git
 * https://github.com/Keyclic/app-sdk.git
 * Do not edit the class manually.
 */

import ApiClient from "../ApiClient";
import Node from "./Node";
import NodePath from "./NodePath";

/**
 * The CategoryEmbedded model module.
 * @module model/CategoryEmbedded
 */
export default class CategoryEmbedded {
  /**
     * Constructs a new "CategoryEmbedded".
     * @alias module:model/CategoryEmbedded
     * @class
    
     */
  constructor() {
    this.children = [];
    this.path = [];

    this.childrenType = Node;
    this.pathType = NodePath;
  }

  /**
   * Constructs a "CategoryEmbedded" from a plain JavaScript object.
   * @param { object } data The plain JavaScript object bearing properties of interest.
   * @param { module:model/CategoryEmbedded } object Optional instance to populate.
   * @return { module:model/CategoryEmbedded } The populated "CategoryEmbedded" instance.
   */
  static constructFromData(data, object = null) {
    if (data === null) {
      throw new Error("No data to build object");
    }

    if (object === null) {
      object = new CategoryEmbedded();
    }

    if (data.hasOwnProperty("children")) {
      object.children = ApiClient.convertToType(data["children"], [
        object.childrenType
      ]);
    }
    if (data.hasOwnProperty("path")) {
      object.path = ApiClient.convertToType(data["path"], [object.pathType]);
    }

    return object;
  }

  /**
   * @return { Array.<module:model/Node> }
   */
  getChildren() {
    return this.children;
  }

  /**
   * @param { Array.<module:model/Node> } children
   */
  setChildren(children) {
    this.children = children;
  }
  /**
   * @return { Array.<module:model/NodePath> }
   */
  getPath() {
    return this.path;
  }

  /**
   * @param { Array.<module:model/NodePath> } path
   */
  setPath(path) {
    this.path = path;
  }
}
