/**
 * Keyclic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 *  <techies@keyclic.com>
 *
 * This class is auto generated by the swagger code generator program with proper templates of Keyclic.
 * https://github.com/swagger-api/swagger-codegen.git
 * https://github.com/Keyclic/app-sdk.git
 * Do not edit the class manually.
 */

import ApiClient from "../ApiClient";
import Point from "./Point";
import Polygon from "./Polygon";

/**
 * The PlaceGeoShape model module.
 * @module model/PlaceGeoShape
 */
export default class PlaceGeoShape {
  /**
     * Constructs a new "PlaceGeoShape".
     * @alias module:model/PlaceGeoShape
     * @class
    
     */
  constructor() {
    this.centroid = null;
    this.elevation = null;
    this.polygon = null;

    this.centroidType = Point;
    this.polygonType = Polygon;
  }

  /**
   * Constructs a "PlaceGeoShape" from a plain JavaScript object.
   * @param { object } data The plain JavaScript object bearing properties of interest.
   * @param { module:model/PlaceGeoShape } object Optional instance to populate.
   * @return { module:model/PlaceGeoShape } The populated "PlaceGeoShape" instance.
   */
  static constructFromData(data, object = null) {
    if (data === null) {
      throw new Error("No data to build object");
    }

    if (object === null) {
      object = new PlaceGeoShape();
    }

    if (data.hasOwnProperty("centroid")) {
      object.centroid = ApiClient.convertToType(
        data["centroid"],
        object.centroidType
      );
    }
    if (data.hasOwnProperty("elevation")) {
      object.elevation = ApiClient.convertToType(data["elevation"], "Number");
    }
    if (data.hasOwnProperty("polygon")) {
      object.polygon = ApiClient.convertToType(
        data["polygon"],
        object.polygonType
      );
    }

    return object;
  }

  /**
   * @return { module:model/Point }
   */
  getCentroid() {
    return this.centroid;
  }

  /**
   * @param { module:model/Point } centroid
   */
  setCentroid(centroid) {
    this.centroid = centroid;
  }
  /**
   * @return { Number }
   */
  getElevation() {
    return this.elevation;
  }

  /**
   * @param { Number } elevation
   */
  setElevation(elevation) {
    this.elevation = elevation;
  }
  /**
   * @return { module:model/Polygon }
   */
  getPolygon() {
    return this.polygon;
  }

  /**
   * @param { module:model/Polygon } polygon
   */
  setPolygon(polygon) {
    this.polygon = polygon;
  }
}
